Parameters:
  KeyPair:
    Type: "AWS::EC2::KeyPair::KeyName"
  DeployKeyLocation:  
    Type: String
Resources:
  JenkinsRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        -
          "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
      RoleName: "JenkinsInstanceRole"
  JenkinsInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Roles:
        - !Ref "JenkinsRole"
  JenkinsSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties: 
      GroupName: "JenkinsSG"
      GroupDescription: "Allows all ingress on 80 and 443"
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: "0.0.0.0/0"
          FromPort: 80
          ToPort: 80
        - IpProtocol: tcp
          CidrIp: "0.0.0.0/0"
          FromPort: 443
          ToPort: 443
        - IpProtocol: tcp
          CidrIp: "0.0.0.0/0"
          FromPort: 22
          ToPort: 22
  JenkinsInstance:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: "t2.micro"
      ImageId: "ami-0ac019f4fcb7cb7e6"
      SecurityGroups:
        - !Ref "JenkinsSG"
      KeyName: !Ref "KeyPair"
      IamInstanceProfile: !Ref JenkinsInstanceProfile
      UserData:
        Fn::Base64:
          Fn::Join:
            - "\n"
            - - "#!/bin/bash"
              - "apt update && apt upgrade -y"
              - "apt install git python-pip -y"
              - "pip install awscli --upgrade --user"
              - Fn::Join:
                - " "
                - - "aws s3 cp"
                  - !Ref DeployKeyLocation
                  - "~/.ssh/deploy_key"
              - "chmod 400 ~/.ssh/deploy_key"
              - "ssh-add ~/.ssh/deploy_key"
              - "git clone git@github.com:danielc2013/jenkins-quick-deploy"
