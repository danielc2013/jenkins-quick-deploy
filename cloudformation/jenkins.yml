AWSTemplateFormatVersion: "2010-09-09"
Description: Build a Jenkins instance
Parameters:
  InstanceType:
    Type: String
    Default: "t2.micro"
  JenkinsImageId:
    Type: String
    Default: "ami-0ac019f4fcb7cb7e6"
  KeyPair:
    Type: "AWS::EC2::KeyPair::KeyName"
  DeployKeyLocation:  
    Type: String
  GitRepo:
    Type: String
    Default: "git@github.com:danielc2013/jenkins-quick-deploy"
Resources:
  JenkinsRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        -
          "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
      RoleName: "JenkinsInstanceRole"
  JenkinsInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Roles:
        - !Ref "JenkinsRole"
  JenkinsSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties: 
      GroupName: "JenkinsSG"
      GroupDescription: "Allows all ingress on 80 and 443"
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: "0.0.0.0/0"
          FromPort: 80
          ToPort: 80
        - IpProtocol: tcp 
          CidrIp: "0.0.0.0/0"
          FromPort: 443
          ToPort: 443
        - IpProtocol: tcp
          CidrIp: "0.0.0.0/0"
          FromPort: 22
          ToPort: 22
        - IpProtocol: tcp
          CidrIp: "0.0.0.0/0"
          FromPort: 8080
          ToPort: 8080
  JenkinsInstance:
    Type: "AWS::EC2::Instance"
    Metadata:
      "AWS::CloudFormation::Init":
        config:
          files:
            "/home/ubuntu/solo.rb":
              content: "cookbook_path ['/tmp/quick_start']"
            "/home/ubuntu/node.json":
              content: "{\"run_list\": [\"recipe[bootstrap::default]\"]}"
    CreationPolicy:
      ResourceSignal:
        Timeout: "PT10M"
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref JenkinsImageId
      SecurityGroups:
        - !Ref "JenkinsSG"
      KeyName: !Ref "KeyPair"
      IamInstanceProfile: !Ref JenkinsInstanceProfile
      UserData:
        Fn::Base64:
          Fn::Join:
            - "\n"
            - - "#!/bin/bash"
              - "apt update && DEBIAN_FRONTEND=noninteractive apt upgrade -y"
              - "apt install python-pip git awscli -y"
              - "pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz"
              - Fn::Join:
                - " "
                - - "cfn-init -v --stack"
                  - !Ref "AWS::StackName"
                  - "--resource JenkinsInstance --region"
                  - !Ref "AWS::Region"
              - "wget https://packages.chef.io/files/stable/chefdk/3.2.30/ubuntu/18.04/chefdk_3.2.30-1_amd64.deb"
              - "dpkg -i chefdk_3.2.30-1_amd64.deb"
              - "U_MASK=$(umask); umask 077"
              - Fn::Join:
                - " "
                - - "aws s3 cp"
                  - !Ref DeployKeyLocation
                  - "~/.ssh/deploy_key"
              - "umask $U_MASK"
              - "eval \"$(ssh-agent -s)\""
              - "ssh-add ~/.ssh/deploy_key"
              - "ssh-keyscan github.com >> ~/.ssh/known_hosts"
              - Fn::Join:
                - " "
                - - "git clone"
                  - !Ref GitRepo
                  - "/home/ubuntu/quick-deploy"
              - "export HOME=/home/ubuntu"
              - "berks vendor /tmp/quick_start -b /home/ubuntu/quick-deploy/bootstrap/Berksfile"
              - "chef-solo -c /home/ubuntu/solo.rb -j /home/ubuntu/node.json > /var/log/chef-output.log"
              - Fn::Join:
                - " "
                - - "cfn-signal -e $? --stack "
                  - !Ref "AWS::StackName"
                  - "--resource JenkinsInstance --region"
                  - !Ref "AWS::Region"